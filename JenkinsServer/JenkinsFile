pipeline {
   agent any   

   environment {
        JENKINS_HOME = 'D:/Jenkins'
        DELAY_TIME = 5
    }

   stages {
    stage('Build') {
        steps {
            // // This command is done implicitely by the config on the Jenkins
            // checkout([$class: 'GitSCM', branches: [[name: '*/master']],
            //     userRemoteConfigs: [[url: 'https://github.com/PabloBelmonte/AutoPlant.git']]])
            // info('Build')
            printTest('Build')
        }
        

        //  post {
        //     // If Maven was able to run the tests, even if some of the test
        //     // failed, record the test results and archive the jar file.
        //     success {
        //        junit '**/target/surefire-reports/TEST-*.xml'
        //        archiveArtifacts 'target/*.jar'
        //     }
        //  }
    }
    stage('Run Pump') {
        steps {
            info('Run Pump')
        }

    }

    stage('Get Sensor Data') {
        steps {
            info('Get Sensor Data')
        }
    }

    stage('Show Sensor data') {
        steps {
            info('Show Sensor data')
        }
    }

   }
}

def runPython(name) {
    script {
    if (isUnix()) {
            sh "echo $name"
        } else {
            // bat "echo 'Running Pyhon $name'"
            // bat "python $WORKSPACE/uC_interface/run_pump.py"
            bat "echo WORKSPACE"
        }
    }
}

def info(message) {
    echo "INFO: ${message}"
}

def warning(message) {
    echo "WARNING: ${message}"
}

def error(message) {
    echo "ERROR: ${message}"
}